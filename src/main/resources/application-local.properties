spring.application.name=consumer-api
server.port=8081

application.title=Consumer Api Service
application.version=v0.0.1-RELEASE

application.allowed.domains=http://localhost:3000
server.servlet.context-path=/api/consumer

application.allowed.domains=http://localhost:3000,http://localhost:8080,http://localhost:8081,https://fixr-frontend-159026163984.europe-west2.run.app

logging.level.root=INFO
logging.file.name=logs/consumer-api-service.log

# TODO remove in prod?
management.endpoints.web.exposure.include=*
springdoc.api-docs.path=/api-docs


spring.jpa.properties.hibernate.default_schema=fixr_app
hibernate.default_schema=fixr_app
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

database=postgres
spring.cloud.gcp.core.enabled=false
spring.cloud.gcp.sql.enabled=false

spring.datasource.url=jdbc:h2:mem:profileDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS fixr_app
# spring.datasource.url=jdbc:h2:file:./data/profileDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS fixr_app
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
# spring.jpa.database-platform=org.hibernate.spatial.dialect.h2geodb.GeoDBDialect
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.sql.init.schema-locations=classpath:init-h2gis.sql

spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false


#to show sql
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace
spring.jpa.properties.hibernate.id.new_generator_mappings=true