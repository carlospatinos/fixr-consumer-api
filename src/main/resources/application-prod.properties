spring.application.name=consumer-api
server.port=8080

application.title=Consumer Api Service
application.version=v0.0.1-RELEASE

application.allowed.domains=http://localhost:3000
server.servlet.context-path=/api

application.allowed.domains=http://localhost:3000,http://localhost:8080,http://localhost:8081,https://fixr-frontend-159026163984.europe-west2.run.app

logging.level.root=INFO
logging.file.name=logs/consumer-api-service.log

# TODO remove in prod?
management.endpoints.web.exposure.include=*
springdoc.api-docs.path=/api-docs


spring.jpa.properties.hibernate.default_schema=fixr_app
hibernate.default_schema=fixr_app
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

database=postgres
spring.cloud.gcp.sql.database-name=consumer_profile
spring.cloud.gcp.sql.instance-connection-name=chefmate-438018:europe-west2:postgresqlgcp

spring.sql.init.mode=always
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# chefmate-438018:europe-west2:postgresqlgcp

# jakarta.persistence.jdbc.url=jdbc:postgresql:///postgres?cloudSqlInstance=chefmate-438018:europe-west2:postgresqlgcp&socketFactory=com.google.cloud.sql.postgres.SocketFactory&user=postgres&password=]N}t,ePjB|.>l0bp
spring.datasource.url=jdbc:postgresql:///postgres?cloudSqlInstance=chefmate-438018:europe-west2:postgresqlgcp&socketFactory=com.google.cloud.sql.postgres.SocketFactory&user=postgres&password=]N}t,ePjB|.>l0bp

security.jwt.secret-key=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
# 1h in millisecond
security.jwt.expiration-time=3600000

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
gcp.bucket.name=fixr_prod_bucket